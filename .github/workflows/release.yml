
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            usi_engine_artifact_name: usi_engine
            kpp_learn_artifact_name: kpp_learn
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            usi_engine_artifact_name: usi_engine.exe
            kpp_learn_artifact_name: kpp_learn.exe
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --bin usi_engine --bin kpp_learn
      - name: Rename artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mv target/${{ matrix.target }}/release/${{ matrix.usi_engine_artifact_name }} target/${{ matrix.target }}/release/${{ matrix.usi_engine_artifact_name }}_${{ github.ref_name }}
          mv target/${{ matrix.target }}/release/${{ matrix.kpp_learn_artifact_name }} target/${{ matrix.target }}/release/${{ matrix.kpp_learn_artifact_name }}_${{ github.ref_name }}
      - name: Rename artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/${{ matrix.usi_engine_artifact_name }} target/${{ matrix.target }}/release/usi_engine_${{ github.ref_name }}.exe
          mv target/${{ matrix.target }}/release/${{ matrix.kpp_learn_artifact_name }} target/${{ matrix.target }}/release/kpp_learn_${{ github.ref_name }}.exe
      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/usi_engine_${{ github.ref_name }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
            target/${{ matrix.target }}/release/kpp_learn_${{ github.ref_name }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Send Email Notification
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: GitHub Actions Release Success - ${{ github.repository }}
          body: |
            A new release has been successfully deployed for ${{ github.repository }}.
            Tag: ${{ github.ref_name }}
            Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_TO }}
          from: GitHub Actions <no-reply@github.com>
